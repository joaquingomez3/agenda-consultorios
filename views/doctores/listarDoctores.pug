extends ../layout.pug

block contenido
    .container-fluid.mt-4
        .mx-auto(style="width: 90%;")
            a.btn.btn-secondary.mb-3(href="/inicio")
                i.bi.bi-arrow-left.me-2
                | Volver

            h1.text-center.mb-4.text-primary.fw-bold.display-5 Lista de Doctores

            a(href="./Crear" class="btn btn-success mb-4")
                i.bi.bi-person-plus-fill.me-1
                | Crear Doctor

            if mensaje
                .alert.alert-success.alert-dismissible.fade.show(role="alert" id="alerta-exito")
                    i.bi.bi-check-circle-fill.me-2
                    strong= mensaje
                    button.btn-close(type="button" data-bs-dismiss="alert" aria-label="Close")

            .card.shadow
                .card-body
                    table.table.table-hover.table-striped.table-bordered
                        thead.table-dark
                            tr
                                th Nombre
                                th Teléfono
                                th DNI
                                th Mail
                                th Domicilio
                                th Matrículas
                                th Especialidades
                                th Acciones
                        tbody
                            each doctor in doctores
                                tr(id=`doctor-${doctor.id}` class=!(doctor.activo ? '' : 'table-danger text-decoration-line-through'))
                                    td= doctor.nombre_completo
                                    td= doctor.telefono
                                    td= doctor.dni
                                    td= doctor.mail
                                    td= doctor.domicilio
                                    td= doctor.matricula
                                    td= doctor.especialidad
                                    td
                                        .d-flex.flex-wrap.gap-2
                                            a(href=`./editar/${doctor.id}` class="btn btn-outline-info btn-sm")
                                                i.bi.bi-pencil-fill.me-1
                                                | Editar
                                            a(href=`./${doctor.id}/especialidades` class="btn btn-outline-secondary btn-sm")
                                                i.bi.bi-layers.me-1
                                                | Especialidad

                                            if doctor.activo
                                                button(type="button" class="btn btn-outline-danger btn-sm" onclick=`cambiarEstadoDoctor(${doctor.id}, false)`)
                                                    i.bi.bi-x-circle-fill.me-1
                                                    | Deshabilitar
                                            else
                                                button(type="button" class="btn btn-outline-warning btn-sm" onclick=`cambiarEstadoDoctor(${doctor.id}, true)`)
                                                    i.bi.bi-check-circle-fill.me-1
                                                    | Habilitar
     
    script.
        function cambiarEstadoDoctor(id, nuevoEstado) {
            const accion = nuevoEstado ? 'habilitar' : 'deshabilitar';
            const accionTexto = nuevoEstado ? 'habilitado' : 'deshabilitado';

            Swal.fire({
                title: `¿Estás seguro de ${accion} este doctor?`,
                text: `El doctor será ${accionTexto}.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: nuevoEstado ? '#198754' : '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: `Sí, ${accion}`,
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/doctores/${id}/estado`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ activo: nuevoEstado })
                    })
                    .then(res => {
                        if (!res.ok) throw new Error('Error HTTP ' + res.status);
                        return res.json();
                    })
                    .then(data => {
                        if (data.exito) {
                            Swal.fire({
                                icon: 'success',
                                title: `Doctor ${accionTexto} correctamente`,
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                // recargá la tabla o actualizá dinámicamente si querés
                                location.reload(); // o actualizar la fila dinámicamente como antes
                            });
                        } else {
                            Swal.fire('Error', 'No se pudo actualizar el estado del doctor.', 'error');
                        }
                    })
                    .catch(err => {
                        console.error('Error:', err);
                        Swal.fire('Error', 'Error en la solicitud.', 'error');
                    });
                }
            });
        }

