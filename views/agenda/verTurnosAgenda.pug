extends ../layout.pug

block contenido
    .container-fluid.mt-4
        .mx-auto(style="width: 90%;")
            a.btn.btn-secondary.mb-3(href="../calendario")
                i.bi.bi-arrow-left.me-2
                | Volver


            h1.text-center.mb-4.text-primary.fw-bold.display-5 Lista de Turnos

            .row
                .col-md-12
                    .card.shadow.mb-4
                        .card-header.bg-primary.text-white
                            h4.mb-0 Turnos Programados

                        .card-body
                            .d-flex.justify-content-between.align-items-center.mb-3
                                .form-group.mb-0
                               
                                if usuario.rol != 'usuario'
                                    a.btn.btn-success.ms-auto(href=`/agendas/${agenda.id}/sobreturnos/crear`)
                                        i.bi.bi-plus-circle.me-1
                                        | Crear Sobreturno

                            table#tablaTurnos.table.table-hover.table-striped.table-bordered.mt-3
                                thead.table-dark
                                    tr
                                        if usuario.rol != 'usuario'
                                            th Paciente
                                        th Doctor
                                        th Fecha
                                        th Hora de Inicio
                                        th Hora de Fin
                                        th Estado
                                        if usuario.rol != 'usuario'
                                            th Motivo
                                        th Acciones
                                tbody
                                    each turno in turnos
                                        tr
                                            if usuario.rol != 'usuario'
                                                td= turno.paciente_nombre || 'Sin asignar'
                                            td= turno.doctor_nombre
                                            td= formatearFecha(turno.fechaTurno)
                                            td= turno.inicio
                                            td= turno.fin
                                            td
                                                if turno.estado_turno === 'Libre'
                                                    span.badge.bg-success Libre
                                                else if turno.estado_turno === 'Reservado'
                                                    span.badge.bg-warning.text-dark Reservado
                                            if usuario.rol != 'usuario'
                                                td= turno.motivo || 'No especificado'
                                            td
                                                if turno.estado_turno === 'Reservado'
                                                    button.btn.btn-danger.btn-sm(type="button", onclick=`cancelarTurno(${turno.turno_id}, ${agenda.id})`)
                                                        i.bi.bi-x-circle.me-1
                                                        | Cancelar
                                                else
                                                    a.btn.btn-outline-primary.btn-sm(href=`/agendas/asignar/${turno.turno_id}`) 
                                                        i.bi.bi-pencil.me-1
                                                        | Reservar



            if usuario.rol != 'usuario'
                .card.shadow
                    .card-header.bg-success.text-white.text-center
                        h4.mb-0 Lista de Sobreturnos

                    .card-body
                        table.table.table-hover.table-striped.table-bordered
                            thead.table-dark
                                tr
                                    th Paciente
                                    th Fecha
                                    th Hora de Inicio
                                    th Hora de Fin
                                    th Estado
                                    th Motivo
                            tbody
                                each sobreturno in sobreturnos
                                    tr
                                        td= sobreturno.paciente_nombre || 'Sin asignar'
                                        td= formatearFecha(sobreturno.fechaTurno)
                                        td= sobreturno.inicio
                                        td= sobreturno.fin
                                        td
                                            if sobreturno.estado_turno === 'Libre'
                                                span.badge.bg-success Libre
                                            else if sobreturno.estado_turno === 'Reservado'
                                                span.badge.bg-warning.text-dark Reservado
                                        td= sobreturno.motivo || 'No especificado'

    script.
        const fechasFeriadas = !{JSON.stringify(fechasNoLaborales)};
        function buscarTurnos(agendaId) {
            const fecha = document.getElementById('fecha').value;
            if (!fecha) {
                alert("Por favor, seleccioná una fecha.");
                return;
            }

            const hoy = new Date().toISOString().split('T')[0];
            if (fecha < hoy) {
                Swal.fire({
                    icon: 'error',
                    title: 'Fecha inválida',
                    text: 'No podés buscar turnos en una fecha pasada.',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }
            if (fechasFeriadas.includes(fecha)) {
                Swal.fire({
                    icon: 'info',
                    title: 'Feriado',
                    text: 'No se pueden generar turnos en días no laborables.',
                    confirmButtonText: 'Aceptar',
                    confirmButtonColor: '#3085d6'
                });
                return;
            }

            window.location.href = `/agendas/${agendaId}/turnos/${fecha}`;
        }
    script.
        document.addEventListener('DOMContentLoaded', function () {
            const tabla = document.getElementById('tablaTurnos');
            if (tabla) {
            new DataTable(tabla, {
                language: {
                url: 'https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json'
                },
                pageLength: 10
            });
            }
        });
    script.
            function cancelarTurno(turnoId, agendaId) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¿Deseás cancelar este turno?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, cancelar',
                    cancelButtonText: 'No'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/agendas/turnos/${turnoId}/cancelar`, {
                            method: 'POST'
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire('Cancelado', 'El turno fue cancelado con éxito.', 'success')
                                    .then(() => {
                                        window.location.reload();

                                    });
                            } else {
                                Swal.fire('Error', 'No se pudo cancelar el turno.', 'error');
                            }
                        });
                    }
                });
            }   

